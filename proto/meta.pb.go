// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: meta.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Meta struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Hostname             string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	IpAddress            string                 `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Os                   string                 `protobuf:"bytes,3,opt,name=os,proto3" json:"os,omitempty"`
	OsVersion            string                 `protobuf:"bytes,4,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	KernelVersion        string                 `protobuf:"bytes,5,opt,name=kernel_version,json=kernelVersion,proto3" json:"kernel_version,omitempty"`
	Architecture         string                 `protobuf:"bytes,6,opt,name=architecture,proto3" json:"architecture,omitempty"`
	CloudProvider        string                 `protobuf:"bytes,7,opt,name=cloud_provider,json=cloudProvider,proto3" json:"cloud_provider,omitempty"`
	Region               string                 `protobuf:"bytes,8,opt,name=region,proto3" json:"region,omitempty"`
	AvailabilityZone     string                 `protobuf:"bytes,9,opt,name=availability_zone,json=availabilityZone,proto3" json:"availability_zone,omitempty"`
	InstanceId           string                 `protobuf:"bytes,10,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	InstanceType         string                 `protobuf:"bytes,11,opt,name=instance_type,json=instanceType,proto3" json:"instance_type,omitempty"`
	AccountId            string                 `protobuf:"bytes,12,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	ProjectId            string                 `protobuf:"bytes,13,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ResourceGroup        string                 `protobuf:"bytes,14,opt,name=resource_group,json=resourceGroup,proto3" json:"resource_group,omitempty"`
	VpcId                string                 `protobuf:"bytes,15,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	SubnetId             string                 `protobuf:"bytes,16,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	ImageId              string                 `protobuf:"bytes,17,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	ServiceId            string                 `protobuf:"bytes,18,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	ContainerId          string                 `protobuf:"bytes,19,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ContainerName        string                 `protobuf:"bytes,20,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	PodName              string                 `protobuf:"bytes,21,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	Namespace            string                 `protobuf:"bytes,22,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ClusterName          string                 `protobuf:"bytes,23,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	NodeName             string                 `protobuf:"bytes,24,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	ContainerImageName   string                 `protobuf:"bytes,25,opt,name=container_image_name,json=containerImageName,proto3" json:"container_image_name,omitempty"`
	ContainerImageId     string                 `protobuf:"bytes,26,opt,name=container_image_id,json=containerImageId,proto3" json:"container_image_id,omitempty"`
	Application          string                 `protobuf:"bytes,27,opt,name=application,proto3" json:"application,omitempty"`
	Environment          string                 `protobuf:"bytes,28,opt,name=environment,proto3" json:"environment,omitempty"`
	Service              string                 `protobuf:"bytes,29,opt,name=service,proto3" json:"service,omitempty"`
	Version              string                 `protobuf:"bytes,30,opt,name=version,proto3" json:"version,omitempty"`
	DeploymentId         string                 `protobuf:"bytes,31,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	PublicIp             string                 `protobuf:"bytes,32,opt,name=public_ip,json=publicIp,proto3" json:"public_ip,omitempty"`
	PrivateIp            string                 `protobuf:"bytes,33,opt,name=private_ip,json=privateIp,proto3" json:"private_ip,omitempty"`
	MacAddress           string                 `protobuf:"bytes,34,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	NetworkInterface     string                 `protobuf:"bytes,35,opt,name=network_interface,json=networkInterface,proto3" json:"network_interface,omitempty"`
	Tags                 map[string]string      `protobuf:"bytes,36,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	EndpointId           string                 `protobuf:"bytes,37,opt,name=endpoint_id,json=endpointId,proto3" json:"endpoint_id,omitempty"`
	Platform             string                 `protobuf:"bytes,38,opt,name=platform,proto3" json:"platform,omitempty"`
	PlatformFamily       string                 `protobuf:"bytes,39,opt,name=platform_family,json=platformFamily,proto3" json:"platform_family,omitempty"`
	PlatformVersion      string                 `protobuf:"bytes,40,opt,name=platform_version,json=platformVersion,proto3" json:"platform_version,omitempty"`
	KernelArchitecture   string                 `protobuf:"bytes,41,opt,name=kernel_architecture,json=kernelArchitecture,proto3" json:"kernel_architecture,omitempty"`
	VirtualizationSystem string                 `protobuf:"bytes,42,opt,name=virtualization_system,json=virtualizationSystem,proto3" json:"virtualization_system,omitempty"`
	VirtualizationRole   string                 `protobuf:"bytes,43,opt,name=virtualization_role,json=virtualizationRole,proto3" json:"virtualization_role,omitempty"`
	HostId               string                 `protobuf:"bytes,44,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	AgentVersion         string                 `protobuf:"bytes,45,opt,name=agent_version,json=agentVersion,proto3" json:"agent_version,omitempty"`
	AgentId              string                 `protobuf:"bytes,46,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Meta) Reset() {
	*x = Meta{}
	mi := &file_meta_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_meta_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_meta_proto_rawDescGZIP(), []int{0}
}

func (x *Meta) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Meta) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *Meta) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Meta) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *Meta) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *Meta) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *Meta) GetCloudProvider() string {
	if x != nil {
		return x.CloudProvider
	}
	return ""
}

func (x *Meta) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Meta) GetAvailabilityZone() string {
	if x != nil {
		return x.AvailabilityZone
	}
	return ""
}

func (x *Meta) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *Meta) GetInstanceType() string {
	if x != nil {
		return x.InstanceType
	}
	return ""
}

func (x *Meta) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Meta) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Meta) GetResourceGroup() string {
	if x != nil {
		return x.ResourceGroup
	}
	return ""
}

func (x *Meta) GetVpcId() string {
	if x != nil {
		return x.VpcId
	}
	return ""
}

func (x *Meta) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

func (x *Meta) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *Meta) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *Meta) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *Meta) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *Meta) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *Meta) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Meta) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *Meta) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *Meta) GetContainerImageName() string {
	if x != nil {
		return x.ContainerImageName
	}
	return ""
}

func (x *Meta) GetContainerImageId() string {
	if x != nil {
		return x.ContainerImageId
	}
	return ""
}

func (x *Meta) GetApplication() string {
	if x != nil {
		return x.Application
	}
	return ""
}

func (x *Meta) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *Meta) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *Meta) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Meta) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *Meta) GetPublicIp() string {
	if x != nil {
		return x.PublicIp
	}
	return ""
}

func (x *Meta) GetPrivateIp() string {
	if x != nil {
		return x.PrivateIp
	}
	return ""
}

func (x *Meta) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *Meta) GetNetworkInterface() string {
	if x != nil {
		return x.NetworkInterface
	}
	return ""
}

func (x *Meta) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Meta) GetEndpointId() string {
	if x != nil {
		return x.EndpointId
	}
	return ""
}

func (x *Meta) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *Meta) GetPlatformFamily() string {
	if x != nil {
		return x.PlatformFamily
	}
	return ""
}

func (x *Meta) GetPlatformVersion() string {
	if x != nil {
		return x.PlatformVersion
	}
	return ""
}

func (x *Meta) GetKernelArchitecture() string {
	if x != nil {
		return x.KernelArchitecture
	}
	return ""
}

func (x *Meta) GetVirtualizationSystem() string {
	if x != nil {
		return x.VirtualizationSystem
	}
	return ""
}

func (x *Meta) GetVirtualizationRole() string {
	if x != nil {
		return x.VirtualizationRole
	}
	return ""
}

func (x *Meta) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *Meta) GetAgentVersion() string {
	if x != nil {
		return x.AgentVersion
	}
	return ""
}

func (x *Meta) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

var File_meta_proto protoreflect.FileDescriptor

const file_meta_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"meta.proto\x12\x05proto\"\xef\f\n" +
	"\x04Meta\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x02 \x01(\tR\tipAddress\x12\x0e\n" +
	"\x02os\x18\x03 \x01(\tR\x02os\x12\x1d\n" +
	"\n" +
	"os_version\x18\x04 \x01(\tR\tosVersion\x12%\n" +
	"\x0ekernel_version\x18\x05 \x01(\tR\rkernelVersion\x12\"\n" +
	"\farchitecture\x18\x06 \x01(\tR\farchitecture\x12%\n" +
	"\x0ecloud_provider\x18\a \x01(\tR\rcloudProvider\x12\x16\n" +
	"\x06region\x18\b \x01(\tR\x06region\x12+\n" +
	"\x11availability_zone\x18\t \x01(\tR\x10availabilityZone\x12\x1f\n" +
	"\vinstance_id\x18\n" +
	" \x01(\tR\n" +
	"instanceId\x12#\n" +
	"\rinstance_type\x18\v \x01(\tR\finstanceType\x12\x1d\n" +
	"\n" +
	"account_id\x18\f \x01(\tR\taccountId\x12\x1d\n" +
	"\n" +
	"project_id\x18\r \x01(\tR\tprojectId\x12%\n" +
	"\x0eresource_group\x18\x0e \x01(\tR\rresourceGroup\x12\x15\n" +
	"\x06vpc_id\x18\x0f \x01(\tR\x05vpcId\x12\x1b\n" +
	"\tsubnet_id\x18\x10 \x01(\tR\bsubnetId\x12\x19\n" +
	"\bimage_id\x18\x11 \x01(\tR\aimageId\x12\x1d\n" +
	"\n" +
	"service_id\x18\x12 \x01(\tR\tserviceId\x12!\n" +
	"\fcontainer_id\x18\x13 \x01(\tR\vcontainerId\x12%\n" +
	"\x0econtainer_name\x18\x14 \x01(\tR\rcontainerName\x12\x19\n" +
	"\bpod_name\x18\x15 \x01(\tR\apodName\x12\x1c\n" +
	"\tnamespace\x18\x16 \x01(\tR\tnamespace\x12!\n" +
	"\fcluster_name\x18\x17 \x01(\tR\vclusterName\x12\x1b\n" +
	"\tnode_name\x18\x18 \x01(\tR\bnodeName\x120\n" +
	"\x14container_image_name\x18\x19 \x01(\tR\x12containerImageName\x12,\n" +
	"\x12container_image_id\x18\x1a \x01(\tR\x10containerImageId\x12 \n" +
	"\vapplication\x18\x1b \x01(\tR\vapplication\x12 \n" +
	"\venvironment\x18\x1c \x01(\tR\venvironment\x12\x18\n" +
	"\aservice\x18\x1d \x01(\tR\aservice\x12\x18\n" +
	"\aversion\x18\x1e \x01(\tR\aversion\x12#\n" +
	"\rdeployment_id\x18\x1f \x01(\tR\fdeploymentId\x12\x1b\n" +
	"\tpublic_ip\x18  \x01(\tR\bpublicIp\x12\x1d\n" +
	"\n" +
	"private_ip\x18! \x01(\tR\tprivateIp\x12\x1f\n" +
	"\vmac_address\x18\" \x01(\tR\n" +
	"macAddress\x12+\n" +
	"\x11network_interface\x18# \x01(\tR\x10networkInterface\x12)\n" +
	"\x04tags\x18$ \x03(\v2\x15.proto.Meta.TagsEntryR\x04tags\x12\x1f\n" +
	"\vendpoint_id\x18% \x01(\tR\n" +
	"endpointId\x12\x1a\n" +
	"\bplatform\x18& \x01(\tR\bplatform\x12'\n" +
	"\x0fplatform_family\x18' \x01(\tR\x0eplatformFamily\x12)\n" +
	"\x10platform_version\x18( \x01(\tR\x0fplatformVersion\x12/\n" +
	"\x13kernel_architecture\x18) \x01(\tR\x12kernelArchitecture\x123\n" +
	"\x15virtualization_system\x18* \x01(\tR\x14virtualizationSystem\x12/\n" +
	"\x13virtualization_role\x18+ \x01(\tR\x12virtualizationRole\x12\x17\n" +
	"\ahost_id\x18, \x01(\tR\x06hostId\x12#\n" +
	"\ragent_version\x18- \x01(\tR\fagentVersion\x12\x19\n" +
	"\bagent_id\x18. \x01(\tR\aagentId\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B.Z,github.com/devpospicha/ishared/protob\x06proto3"

var (
	file_meta_proto_rawDescOnce sync.Once
	file_meta_proto_rawDescData []byte
)

func file_meta_proto_rawDescGZIP() []byte {
	file_meta_proto_rawDescOnce.Do(func() {
		file_meta_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_meta_proto_rawDesc), len(file_meta_proto_rawDesc)))
	})
	return file_meta_proto_rawDescData
}

var file_meta_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_meta_proto_goTypes = []any{
	(*Meta)(nil), // 0: proto.Meta
	nil,          // 1: proto.Meta.TagsEntry
}
var file_meta_proto_depIdxs = []int32{
	1, // 0: proto.Meta.tags:type_name -> proto.Meta.TagsEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_meta_proto_init() }
func file_meta_proto_init() {
	if File_meta_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_meta_proto_rawDesc), len(file_meta_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_meta_proto_goTypes,
		DependencyIndexes: file_meta_proto_depIdxs,
		MessageInfos:      file_meta_proto_msgTypes,
	}.Build()
	File_meta_proto = out.File
	file_meta_proto_goTypes = nil
	file_meta_proto_depIdxs = nil
}
